import datetime

class ValidaCpf:
    def __init__(self, cpf):
        self.cpf = cpf.replace('.', '').replace('-', '')
    
    def cpf_valido(self):
        if len(self.cpf) != 11 or not self.cpf.isnumeric() or self.numeros_iguai():
            return False
        numDV1 = self.calcula_DV1()
        numDV2 = self.calcula_DV2(numDV1)
        if int(numDV1) == int(self.cpf[9]) and int(numDV2) == int(self.cpf[10]):
            return True

    def numeros_iguai(self):
        numIG = 0
        for i in range(0, 11):
            numIG += int(self.cpf[i])
        if int(self.cpf[0]) == numIG / 11:
            return True
        return False
    
    def calcula_DV1(self):
        numDV1 = 0
        for i in range(1, 10):
            numDV1 = numDV1 + int(self.cpf[i-1:i]) * i
        numDV1 = numDV1 % 11
        if (numDV1 == 10):
            numDV1 = 0
        return numDV1
    
    def calcula_DV2(self, numDV1):
        numDV2 = 0
        for i in range(2, 11):
            numDV2 = numDV2 + int(self.cpf[i-1:i]) * (i-1)
        numDV2 = numDV2 % 11
        if (numDV2 == 10):
            numDV2 = 0
        return numDV2

class EntraCpf:
    def __init__(self):
        self.valid_file = open("valid_cpf.txt", "a")
        self.invalid_file = open("invalid_cpf.txt", "a")
        self.error_file = open("errors.txt", "a")

    def verifica_cpf(self):
        try:
            while True:
                print('Informe o CPF')
                cpf = str(input())
                Validacao = ValidaCpf(cpf)
                if Validacao.cpf_valido():
                    print('CPF é válido.')
                    self.valid_file.write(cpf + "\n")
                else:
                    print('CPF inválido')
                    self.invalid_file.write(cpf + "\n")
        except (EOFError, KeyboardInterrupt):
            print("Programa finalizado.")
        except Exception as e:
            self.error_file.write("Error: " + str(e) + "\n")
            self.error_file.write("Data e hora: " + str(datetime.datetime.now()) + "\n")
            print("Error:", str(e))
        finally:
            self.valid_file.close()
            self.invalid_file.close()
            self.error_file.close()
